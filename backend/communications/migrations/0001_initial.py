# Generated by Django 4.2.7 on 2025-08-29 13:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('academics', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParentTeacherMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_type', models.CharField(choices=[('individual', 'Individual Meeting'), ('class', 'Class Meeting'), ('general', 'General Meeting')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('scheduled_date', models.DateTimeField()),
                ('duration_minutes', models.IntegerField(default=30)),
                ('location', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('agenda', models.TextField(blank=True)),
                ('meeting_notes', models.TextField(blank=True)),
                ('action_items', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_meetings', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='users.parent')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='schools.school')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='users.student')),
                ('target_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='academics.class')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='users.teacher')),
            ],
            options={
                'verbose_name': 'Parent-Teacher Meeting',
                'verbose_name_plural': 'Parent-Teacher Meetings',
                'db_table': 'parent_teacher_meetings',
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('grade_update', 'Grade Update'), ('attendance_alert', 'Attendance Alert'), ('behavior_note', 'Behavior Note'), ('assignment_due', 'Assignment Due'), ('announcement', 'Announcement'), ('parent_meeting', 'Parent Meeting'), ('fee_reminder', 'Fee Reminder'), ('event_reminder', 'Event Reminder')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('whatsapp_sent', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='CommunicationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('whatsapp', 'WhatsApp'), ('voice_call', 'Voice Call'), ('in_app', 'In-App Message')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], max_length=20)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('external_message_id', models.CharField(blank=True, max_length=100)),
                ('cost', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_communications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communication_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Communication Log',
                'verbose_name_plural': 'Communication Logs',
                'db_table': 'communication_logs',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('announcement_type', models.CharField(choices=[('general', 'General'), ('academic', 'Academic'), ('event', 'Event'), ('emergency', 'Emergency'), ('holiday', 'Holiday')], max_length=20)),
                ('target_audience', models.CharField(choices=[('all', 'All Users'), ('teachers', 'Teachers'), ('students', 'Students'), ('parents', 'Parents'), ('specific_class', 'Specific Class'), ('specific_subject', 'Specific Subject')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('publish_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('is_urgent', models.BooleanField(default=False)),
                ('send_sms', models.BooleanField(default=False)),
                ('send_email', models.BooleanField(default=False)),
                ('send_whatsapp', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='announcements/')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_announcements', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='schools.school')),
                ('target_classes', models.ManyToManyField(blank=True, related_name='announcements', to='academics.class')),
                ('target_subjects', models.ManyToManyField(blank=True, related_name='announcements', to='academics.subject')),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'db_table': 'announcements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_text', models.TextField()),
                ('variables', models.JSONField(default=list)),
                ('language', models.CharField(choices=[('en', 'English'), ('fr', 'French'), ('rw', 'Kinyarwanda')], max_length=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_templates', to='schools.school')),
            ],
            options={
                'verbose_name': 'SMS Template',
                'verbose_name_plural': 'SMS Templates',
                'db_table': 'sms_templates',
                'unique_together': {('school', 'name', 'language')},
            },
        ),
    ]
